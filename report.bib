@misc{pruhs2004online,
  title={Online scheduling.},
  author={Pruhs, Kirk and Sgall, Jiri and Torng, Eric},
  year={2004}
}

@article{hadoop2016apache,
  title={Apache hadoop yarn},
  author={Hadoop, Apache},
  journal={The Apache Software Foundation},
  year={2016}
}

--------------------------------------------------------------------------------

@article{jian_drs_2024,
	title = {{DRS}: {A} deep reinforcement learning enhanced {Kubernetes} scheduler for microservice-based system},
	volume = {54},
	issn = {1097-024X},
	shorttitle = {{DRS}},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.3284},
	doi = {10.1002/spe.3284},
	abstract = {Recently, Kubernetes is widely used to manage and schedule the resources of microservices in cloud-native distributed applications, as the most famous container orchestration framework. However, Kubernetes preferentially schedules microservices to nodes with rich and balanced CPU and memory resources on a single node. The native scheduler of Kubernetes, called Kube-scheduler, may cause resource fragmentation and decrease resource utilization. In this paper, we propose a deep reinforcement learning enhanced Kubernetes scheduler named DRS. We initially frame the Kubernetes scheduling problem as a Markov decision process with intricately designed state, action, and reward structures in an effort to increase resource usage and decrease load imbalance. Then, we design and implement DRS mointor to perceive six parameters concerning resource utilization and create a thorough picture of all available resources globally. Finally, DRS can automatically learn the scheduling policy through interaction with the Kubernetes cluster, without relying on expert knowledge about workload and cluster status. We implement a prototype of DRS in a Kubernetes cluster with five nodes and evaluate its performance. Experimental results highlight that DRS overcomes the shortcomings of Kube-scheduler and achieves the expected scheduling target with three workloads. With only 3.27\% CPU overhead and 0.648\% communication delay, DRS outperforms Kube-scheduler by 27.29\% in terms of resource utilization and reduces load imbalance by 2.90 times on average.},
	language = {en},
	number = {10},
	urldate = {2025-05-02},
	journal = {Software: Practice and Experience},
	author = {Jian, Zhaolong and Xie, Xueshuo and Fang, Yaozheng and Jiang, Yibing and Lu, Ye and Dash, Ankan and Li, Tao and Wang, Guiling},
	year = {2024},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.3284},
	keywords = {deep reinforcement learning, Kubernetes scheduler, microservice scheduling, resource awareness},
	pages = {2102--2126},
	file = {Full Text PDF:/Users/luca/Zotero/storage/XP7JP3R7/Jian et al. - 2024 - DRS A deep reinforcement learning enhanced Kubernetes scheduler for microservice-based system.pdf:application/pdf},
}

@article{rakrouki_qos-aware_2022,
	title = {{QoS}-{Aware} {Algorithm} {Based} on {Task} {Flow} {Scheduling} in {Cloud} {Computing} {Environment}},
	volume = {22},
	copyright = {https://creativecommons.org/licenses/by/4.0/},
	issn = {1424-8220},
	url = {https://www.mdpi.com/1424-8220/22/7/2632},
	doi = {10.3390/s22072632},
	abstract = {This paper deals with the challenging problem of scheduling users’ tasks, while taking into consideration users’ quality of service (QoS) requirements, with the objective of reducing the energy consumption of physical machines. This paper presents a model to analyze the current state of the running tasks according to the results of the QoS prediction assigned by an ARIMA prediction model optimized with Kalman ﬁlter. Then, we calculate a scheduling policy with a combined particle swarm optimization (PSO) and gravitational search algorithm (GSA) algorithms according to the QoS status analysis. Experimental results show that the proposed HPSO algorithm reduces resources consumption 16.51\% more than the original hybrid algorithm, and the violation of service-level agreement (SLA) is 0.053\% less when the optimized prediction model is used.},
	language = {en},
	number = {7},
	urldate = {2025-05-02},
	journal = {Sensors},
	author = {Rakrouki, Mohamed Ali and Alharbe, Nawaf},
	month = mar,
	year = {2022},
	pages = {2632},
	file = {PDF:/Users/luca/Zotero/storage/KXJIXBLC/Rakrouki and Alharbe - 2022 - QoS-Aware Algorithm Based on Task Flow Scheduling in Cloud Computing Environment.pdf:application/pdf},
}

@misc{grammenos_pronto_2021,
	title = {Pronto: {Federated} {Task} {Scheduling}},
	shorttitle = {Pronto},
	url = {http://arxiv.org/abs/2104.13429},
	doi = {10.48550/arXiv.2104.13429},
	abstract = {We present a federated, asynchronous, memory-limited algorithm for online task scheduling across large-scale networks of hundreds of workers. This is achieved through recent advancements in federated edge computing that unlocks the ability to incrementally compute local model updates within each node separately. This local model is then used along with incoming data to generate a rejection signal which reflects the overall node responsiveness and if it is able to accept an incoming task without resulting in degraded performance. Through this innovation, we allow each node to execute scheduling decisions on whether to accept an incoming job independently based on the workload seen thus far. Further, using the aggregate of the iterates a global view of the system can be constructed, as needed, and could be used to produce a holistic perspective of the system. We complement our findings, by an empirical evaluation on a large-scale real-world dataset of traces from a virtualized production data center that shows, while using limited memory, that our algorithm exhibits state-of-the-art performance. Concretely, it is able to predict changes in the system responsiveness ahead of time based on the industry-standard CPU-Ready metric and, in turn, can lead to better scheduling decisions and overall utilization of the available resources. Finally, in the absence of communication latency, it exhibits attractive horizontal scalability.},
	urldate = {2025-05-14},
	publisher = {arXiv},
	author = {Grammenos, Andreas and Kalyvianaki, Evangelia and Pietzuch, Peter},
	month = apr,
	year = {2021},
	note = {arXiv:2104.13429 [cs]},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing},
	file = {Full Text PDF:/Users/luca/Zotero/storage/XN2P7564/Grammenos et al. - 2021 - Pronto Federated Task Scheduling.pdf:application/pdf;Snapshot:/Users/luca/Zotero/storage/5PG2V5EZ/2104.html:text/html},
}

@incollection{singh_airflow_2019,
	address = {Berkeley, CA},
	title = {Airflow},
	isbn = {978-1-4842-4961-1},
	url = {https://doi.org/10.1007/978-1-4842-4961-1_4},
	abstract = {This chapter focuses on introducing Airflow and how it can be used to handle complex data workflows. Airflow was developed in-house by Airbnb engineers, to manage internal workflows in an efficient manner. Airflow later went on to become part of Apache in 2016 and was made available to users as an open source. Basically, Airflow is a framework for executing, scheduling, distributing, and monitoring various jobs in which there can be multiple tasks that are either interdependent or independent of one another. Every job that is run using Airflow must be defined via a directed acyclic graph (DAG) definition file, which contains a collection you want to run, grouped by relationships and dependencies.},
	language = {en},
	urldate = {2025-05-14},
	booktitle = {Learn {PySpark}: {Build} {Python}-based {Machine} {Learning} and {Deep} {Learning} {Models}},
	publisher = {Apress},
	author = {Singh, Pramod},
	editor = {Singh, Pramod},
	year = {2019},
	doi = {10.1007/978-1-4842-4961-1_4},
	pages = {67--84},
}

@misc{kube-page,
	title = {Overview},
	url = {https://kubernetes.io/docs/concepts/overview/},
	abstract = {Kubernetes is a portable, extensible, open source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.},
	language = {en},
	urldate = {2025-05-15},
	journal = {Kubernetes},
	file = {Snapshot:/Users/luca/Zotero/storage/94NXUH6C/overview.html:text/html},
}

@misc{qadeer_scaling_2022,
	title = {Scaling {Kubernetes} to {Over} 4k {Nodes} and 200k {Pods}},
	url = {https://medium.com/paypal-tech/scaling-kubernetes-to-over-4k-nodes-and-200k-pods-29988fad6ed},
	abstract = {Kubernetes’ scalability is not limited to the number of nodes \& pods. Learn how PayPal solved the challenges of scaling Kubernetes…},
	language = {en},
	urldate = {2025-05-15},
	journal = {The PayPal Technology Blog},
	author = {Qadeer, Abdul},
	month = jan,
	year = {2022},
	file = {Snapshot:/Users/luca/Zotero/storage/JURNVK5R/scaling-kubernetes-to-over-4k-nodes-and-200k-pods-29988fad6ed.html:text/html},
}

@inproceedings{sahasrabudhe_improved_2015,
    title = {Improved filter-weight algorithm for utilization-aware resource scheduling in {OpenStack}},
    url = {https://ieeexplore.ieee.org/document/7489348/},
    doi = {10.1109/INFOP.2015.7489348},
    abstract = {OpenStack is a cloud computing platform. OpenStack provides an Infrastructure as a Service (IaaS). OpenStack constitutes resources such as compute, storage and network resources. Resource allocation in cloud environment deals with assigning available resources in cost effective manner. Compute resources are allocated in the form of virtual machines (aka instances). Storage resources are allocated in the form of virtual disks (aka volumes). Network resources are allocated in the form of virtual switches, routers and subnets for instance. Resource allocation in OpenStack is carried out by nova-scheduler. However, it is unable to support providers objectives such as allocation of resources based on user privileges, preference to underlying physical infrastructure, actual resource utilizations for example, CPU, memory, storage, network bandwidth etc. An improved nova-scheduler algorithm considers not only RAM, CPU but also vCPU utilization and network bandwidth. Improved nova-scheduler is referred as metrics-weight scheduler in this paper. This paper gives performance evaluation and analysis of Filter-scheduler and Metrics-weight scheduler.},
    urldate = {2025-05-15},
    booktitle = {2015 {International} {Conference} on {Information} {Processing} ({ICIP})},
    author = {Sahasrabudhe, Shalmali and Sonawani, Shilpa S.},
    month = dec,
    year = {2015},
    keywords = {Cloud computing, filtering, Filtering algorithms, Information filters, multi-objective, nova-scheduler, OpenStack, Resource Allocation, Resource management, Servers, Virtual machining, weighting},
    pages = {43--47},
    file = {Full Text PDF:/Users/luca/Zotero/storage/DBBI6CHC/Sahasrabudhe and Sonawani - 2015 - Improved filter-weight algorithm for utilization-aware resource scheduling in OpenStack.pdf:application/pdf},
}

@misc{proc_stat5,
    title = {proc\_stat(5) - {Linux} manual page},
    url = {https://www.man7.org/linux/man-pages/man5/proc_stat.5.html},
    urldate = {2025-05-15},
    file = {proc_stat(5) - Linux manual page:/Users/luca/Zotero/storage/IQGL6NWX/proc_stat.5.html:text/html},
}


@misc{kubernetes-adoption-statistics,
	title = {Latest {Kubernetes} {Adoption} {Statistics}: {Global} {Insights}},
	shorttitle = {Latest {Kubernetes} {Adoption} {Statistics}},
	url = {https://edgedelta.com/company/blog/kubernetes-adoption-statistics},
	abstract = {Stay updated with global insights and analysis on Kubernetes adoption.},
	language = {en},
	urldate = {2025-05-23},
	journal = {Edge Delta},
	month = may,
	year = {2024},
	note = {Section: Blog},
	file = {Snapshot:/Users/luca/Zotero/storage/LU2I2GGN/kubernetes-adoption-statistics.html:text/html},
}

@misc{knative,
	title = {Testimonials - {Knative}},
	url = {https://knative.dev/docs/about/testimonials/},
	urldate = {2025-05-23},
	file = {Testimonials - Knative:/Users/luca/Zotero/storage/RNPG8QLE/testimonials.html:text/html},
}

@misc{google-gke,
	title = {Google {Kubernetes} {Engine} ({GKE})},
	url = {https://cloud.google.com/kubernetes-engine},
	abstract = {GKE is the industry's first fully managed Kubernetes service with full Kubernetes API, 4-way autoscaling, release channels, and multi-cluster support.},
	language = {en-US},
	urldate = {2025-05-23},
	journal = {Google Cloud},
	file = {Snapshot:/Users/luca/Zotero/storage/DG6DH6W9/kubernetes-engine.html:text/html},
}

@misc{openwhisk,
	title = {Apache {OpenWhisk} is a serverless, open source cloud platform},
	url = {https://openwhisk.apache.org/},
	urldate = {2025-05-23},
	file = {Apache OpenWhisk is a serverless, open source cloud platform:/Users/luca/Zotero/storage/HM5BES5G/openwhisk.apache.org.html:text/html},
}

@misc{azure-aks,
	title = {What is {Azure} {Kubernetes} {Service} ({AKS})? - {Azure} {Kubernetes} {Service}},
	shorttitle = {What is {Azure} {Kubernetes} {Service} ({AKS})?},
	url = {https://learn.microsoft.com/en-us/azure/aks/what-is-aks},
	abstract = {Learn about the features of Azure Kubernetes Service (AKS) and how to get started.},
	language = {en-us},
	urldate = {2025-05-23},
	author = {schaffererin},
	file = {Snapshot:/Users/luca/Zotero/storage/YGWEM93F/what-is-aks.html:text/html},
}

@article{kubernetes-ai,
	title = {Leveraging {Kubernetes} for {AI}/{ML} {Workloads}: {Case} studies in autonomous driving and large language model infrastructure},
	volume = {15},
	issn = {2582-8266},
	shorttitle = {Leveraging {Kubernetes} for {AI}/{ML} {Workloads}},
	url = {https://journalwjaets.com/node/480},
	doi = {10.30574/wjaets.2025.15.1.0320},
	language = {en},
	number = {1},
	urldate = {2025-05-23},
	journal = {World Journal of Advanced Engineering Technology and Sciences},
	author = {{Praneel Madabushini}},
	month = jan,
	year = {2025},
	note = {Publisher: GSC Online Press},
	pages = {1044--1052},
	file = {PDF:/Users/luca/Zotero/storage/7IEYCIHP/Praneel Madabushini - 2025 - Leveraging Kubernetes for AIML Workloads Case studies in autonomous driving and large language mod.pdf:application/pdf},
}


@misc{cloudraft,
	title = {What is {Kubernetes} on {Edge}?},
	url = {https://www.cloudraft.io/what-is/kubernetes-on-edge},
	abstract = {Discover the power of Kubernetes on Edge. Learn about the benefits, use cases, and deployment strategies for edge computing. This can enhance IoT, smart cities, and real-time data processing.},
	language = {en},
	urldate = {2025-05-23},
	journal = {CloudRaft},
	month = jun,
	year = {2024},
	file = {Snapshot:/Users/luca/Zotero/storage/YG35DIFY/kubernetes-on-edge.html:text/html},
}


@misc{bin-packing-and-cost-savings-in-kubernetes-clusters-on-aws,
	title = {Bin {Packing} and {Cost} {Savings} in {Kubernetes} {Clusters} on {AWS}},
	url = {https://www.sedai.io/blog/bin-packing-and-cost-savings-in-kubernetes-clusters-on-aws},
	abstract = {Efficient bin packing in Kubernetes optimizes resource usage, reducing AWS EC2 costs. This guide explores strategies like NodeResourcesFit and custom schedulers for better performance. Sedai's autonomous solution leverages application awareness to enhance node utilization, providing significant cost savings and efficiency.},
	urldate = {2025-05-23},
	author = {Gopinath, Nikhil},
	file = {Snapshot:/Users/luca/Zotero/storage/J676XL3I/bin-packing-and-cost-savings-in-kubernetes-clusters-on-aws.html:text/html},
}


@misc{cost-strategies,
	title = {Kubernetes {Cost} {Optimization}: {Strategies} \& {Best} {Practices}},
	shorttitle = {Kubernetes {Cost} {Optimization}},
	url = {https://www.cloudbolt.io/cloud-cost-management/kubernetes-cost-optimization/},
	abstract = {Learn about Kubernetes cost optimization, including best practices and tools like Augmented FinOps, to reduce expenses and improve efficiency in your cluster environment.},
	language = {en-US},
	urldate = {2025-05-23},
	journal = {CloudBolt},
	file = {Snapshot:/Users/luca/Zotero/storage/YR49YK5V/kubernetes-cost-optimization.html:text/html},
}

@misc{kubernetes-components,
	title = {Kubernetes {Components}},
	url = {https://kubernetes.io/docs/concepts/overview/components/},
	abstract = {An overview of the key components that make up a Kubernetes cluster.},
	language = {en},
	urldate = {2025-05-23},
	journal = {Kubernetes},
	note = {Section: docs},
	file = {Snapshot:/Users/luca/Zotero/storage/BDZD3CYB/components.html:text/html},
}

@inproceedings{netto_koordinator_2018,
	title = {Koordinator: {A} {Service} {Approach} for {Replicating} {Docker} {Containers} in {Kubernetes}},
	shorttitle = {Koordinator},
	url = {https://ieeexplore.ieee.org/document/8538452/},
	doi = {10.1109/ISCC.2018.8538452},
	urldate = {2025-05-24},
	booktitle = {2018 {IEEE} {Symposium} on {Computers} and {Communications} ({ISCC})},
	author = {Netto, Hylson Vescovi and Luiz, Aldelir Fernando and Correia, Miguel and de Oliveira Rech, Luciana and Oliveira, Caio Pereira},
	month = jun,
	year = {2018},
	note = {ISSN: 1530-1346},
	keywords = {Cloud computing, Computers, Containers, Protocols, Task analysis, Virtualization},
	pages = {00058--00063},
	file = {Full Text PDF:/Users/luca/Zotero/storage/6NF963DA/Netto et al. - 2018 - Koordinator A Service Approach for Replicating Docker Containers in Kubernetes.pdf:application/pdf},
}

@inproceedings{gog_firmament_2016,
	address = {USA},
	series = {{OSDI}'16},
	title = {Firmament: fast, centralized cluster scheduling at scale},
	isbn = {978-1-931971-33-1},
	shorttitle = {Firmament},
	urldate = {2025-05-23},
	booktitle = {Proceedings of the 12th {USENIX} conference on {Operating} {Systems} {Design} and {Implementation}},
	publisher = {USENIX Association},
	author = {Gog, Ionel and Schwarzkopf, Malte and Gleave, Adam and Watson, Robert N. M. and Hand, Steven},
	month = nov,
	year = {2016},
	pages = {99--115},
}

@misc{poseidon,
	title = {kubernetes-retired/poseidon},
	copyright = {Apache-2.0},
	url = {https://github.com/kubernetes-retired/poseidon},
	abstract = {[EOL] A Firmament-based Kubernetes scheduler},
	urldate = {2025-05-24},
	publisher = {Kubernetes Retired},
	month = may,
	year = {2025},
	note = {original-date: 2015-10-09T10:47:50Z},
	keywords = {k8s-sig-scheduling},
}

@article{intel-tas,
	title = {Telemetry {Aware} {Scheduling} ({TAS}) - {Automated} {Workload} {Optimization} with {Kubernetes} ({K8s}*) {Technology} {Guide}},
	language = {en},
	journal = {Technology Guide},
	author = {Cremins, Dave and Muldoon, Killian and Sehgal, Swati},
	file = {PDF:/Users/luca/Zotero/storage/2XM2KCZJ/Cremins et al. - Telemetry Aware Scheduling (TAS) - Automated Workload Optimization with Kubernetes (K8s) Technology.pdf:application/pdf},
}

@misc{trimaran,
	title = {Improving the {Resource} {Efficiency} for {OpenShift} {Clusters} {Via} {Trimaran} {Schedulers}},
	url = {https://www.redhat.com/en/blog/improving-the-resource-efficiency-for-openshift-clusters-via-trimaran-schedulers},
	abstract = {Cluster admins usually complain that the overall cluster resource utilization is very low. Still, Kubernetes is not able to schedule any more workload in the cluster. However, they are reluctant to resize their containers as these requests are set to handle the peak usage.},
	language = {en},
	urldate = {2025-05-24},
	file = {Snapshot:/Users/luca/Zotero/storage/SPQ5M74Z/improving-the-resource-efficiency-for-openshift-clusters-via-trimaran-schedulers.html:text/html},
}

@misc{kube-scheduler,
	title = {Kubernetes {Scheduler}},
	url = {https://kubernetes.io/docs/concepts/scheduling-eviction/kube-scheduler/},
	abstract = {In Kubernetes, scheduling refers to making sure that Pods are matched to Nodes so that Kubelet can run them.
Scheduling overview A scheduler watches for newly created Pods that have no Node assigned. For every Pod that the scheduler discovers, the scheduler becomes responsible for finding the best Node for that Pod to run on. The scheduler reaches this placement decision taking into account the scheduling principles described below.},
	language = {en},
	urldate = {2025-05-24},
	journal = {Kubernetes},
	note = {Section: docs},
}

@misc{cloudera_yunikorn_2019,
	title = {{YuniKorn}: a universal resources scheduler},
	shorttitle = {{YuniKorn}},
	url = {https://www.cloudera.com/blog/technical/yunikorn-a-universal-resources-scheduler.html},
	abstract = {YuniKorn: a universal resources scheduler},
	language = {en},
	urldate = {2025-05-24},
	journal = {Cloudera},
	author = {{Cloudera} and Vavilapalli, Vinod Kumar and read, Wilfred Spiegelenburg • 7 min},
	month = jul,
	year = {2019},
	file = {Snapshot:/Users/luca/Zotero/storage/LX7Z5XLR/yunikorn-a-universal-resources-scheduler.html:text/html},
}

@misc{volcano_introduction,
	title = {Introduction},
	url = {https://volcano.sh/en/docs/},
	language = {en-us},
	urldate = {2025-05-24},
	journal = {Volcano},
	author = {Volcano},
	file = {Snapshot:/Users/luca/Zotero/storage/KDQLUKQU/docs.html:text/html},
}

@misc{tyczynski_kubernetes_2015,
	title = {Kubernetes {Performance} {Measurements} and {Roadmap}},
	url = {https://kubernetes.io/blog/2015/09/Kubernetes-Performance-Measurements-And/},
	language = {en},
	urldate = {2025-05-18},
	journal = {Kubernetes},
	author = {Tyczynski{\textbar}, Wojciech},
	month = sep,
	year = {2015},
	note = {Section: blog},
	file = {Snapshot:/Users/luca/Zotero/storage/3BDR5KJJ/kubernetes-performance-measurements-and.html:text/html},
}

@misc{scheduling-framework,
	title = {Scheduling {Framework}},
	url = {https://kubernetes.io/docs/concepts/scheduling-eviction/scheduling-framework/},
	language = {en},
	urldate = {2025-05-25},
	journal = {Kubernetes},
	note = {Section: docs},
	file = {Snapshot:/Users/luca/Zotero/storage/EMA84QY7/scheduling-framework.html:text/html},
}
@book{Strang2009,
  author = {Strang, Gilbert},
  title = {Introduction to Linear Algebra},
  publisher = {Wellesley-Cambridge Press},
  year = {2009}
}
@article{eftekhari2019moses,
  title={MOSES: A streaming algorithm for linear dimensionality reduction},
  author={Eftekhari, Armin and Hauser, Raphael A and Grammenos, Andreas},
  journal={IEEE transactions on pattern analysis and machine intelligence},
  volume={42},
  number={11},
  pages={2901--2911},
  year={2019},
  publisher={IEEE}
}
@inproceedings{faticanti2021application,
  title={An application of kubernetes cluster federation in fog computing},
  author={Faticanti, Francescomaria and Santoro, Daniele and Cretti, Silvio and Siracusa, Domenico},
  booktitle={2021 24th Conference on Innovation in Clouds, Internet and Networks and Workshops (ICIN)},
  pages={89--91},
  year={2021},
  organization={IEEE}
}
@inproceedings{santoro2017foggy,
  title={Foggy: A platform for workload orchestration in a fog computing environment},
  author={Santoro, Daniele and Zozin, Daniel and Pizzolli, Daniele and De Pellegrini, Francesco and Cretti, Silvio},
  booktitle={2017 IEEE International Conference on Cloud Computing Technology and Science (CloudCom)},
  pages={231--234},
  year={2017},
  organization={IEEE}
}
@inproceedings{bao2019deep,
  title={Deep learning-based job placement in distributed machine learning clusters},
  author={Bao, Yixin and Peng, Yanghua and Wu, Chuan},
  booktitle={IEEE INFOCOM 2019-IEEE conference on computer communications},
  pages={505--513},
  year={2019},
  organization={IEEE}
}
@inproceedings{beltre2019kubesphere,
  title={Kubesphere: An approach to multi-tenant fair scheduling for kubernetes clusters},
  author={Beltre, Angel and Saha, Pankaj and Govindaraju, Madhusudhan},
  booktitle={2019 IEEE cloud summit},
  pages={14--20},
  year={2019},
  organization={IEEE}
}
@inproceedings{bestari2020dynamic,
  title={Dynamic resource scheduler for distributed deep learning training in kubernetes},
  author={Bestari, Muhammad Fadhriga and Kistijantoro, Achmad Imam and Sasmita, Anggrahita Bayu},
  booktitle={2020 7th International Conference on Advance Informatics: Concepts, Theory and Applications (ICAICTA)},
  pages={1--6},
  year={2020},
  organization={IEEE}
}
@inproceedings{carvalho2021qoe,
  title={QoE-aware container scheduler for co-located cloud environments},
  author={Carvalho, Marcos and Macedo, Daniel Fernandes},
  booktitle={2021 IFIP/IEEE International Symposium on Integrated Network Management (IM)},
  pages={286--294},
  year={2021},
  organization={IEEE}
}
@article{toka2021ultra,
  title={Ultra-reliable and low-latency computing in the edge with kubernetes},
  author={Toka, L{\'a}szl{\'o}},
  journal={Journal of Grid Computing},
  volume={19},
  number={3},
  pages={31},
  year={2021},
  publisher={Springer}
}
@article{carrion2022kubernetes,
  title={Kubernetes scheduling: Taxonomy, ongoing issues and challenges},
  author={Carri{\'o}n, Carmen},
  journal={ACM Computing Surveys},
  volume={55},
  number={7},
  pages={1--37},
  year={2022},
  publisher={ACM New York, NY}
}
@inproceedings{huang2020rlsk,
  title={Rlsk: A job scheduler for federated kubernetes clusters based on reinforcement learning},
  author={Huang, Jiaming and Xiao, Chuming and Wu, Weigang},
  booktitle={2020 IEEE International Conference on Cloud Engineering (IC2E)},
  pages={116--123},
  year={2020},
  organization={IEEE}
}
@article{peng2021dl2,
  title={DL2: A deep learning-driven scheduler for deep learning clusters},
  author={Peng, Yanghua and Bao, Yixin and Chen, Yangrui and Wu, Chuan and Meng, Chen and Lin, Wei},
  journal={IEEE Transactions on Parallel and Distributed Systems},
  volume={32},
  number={8},
  pages={1947--1960},
  year={2021},
  publisher={IEEE}
}
@inproceedings{yang2019design,
  title={Design of kubernetes scheduling strategy based on LSTM and grey model},
  author={Yang, Ying and Chen, Lijun},
  booktitle={2019 IEEE 14th International Conference on Intelligent Systems and Knowledge Engineering (ISKE)},
  pages={701--707},
  year={2019},
  organization={IEEE}
}
@inproceedings{harichane2020proposal,
  title={A proposal of kubernetes scheduler using machine-learning on cpu/gpu cluster},
  author={Harichane, Ishak and Makhlouf, Sid Ahmed and Belalem, Ghalem},
  booktitle={Computer Science On-line Conference},
  pages={567--580},
  year={2020},
  organization={Springer}
}
@inproceedings{han2021tailored,
  title={Tailored learning-based scheduling for kubernetes-oriented edge-cloud system},
  author={Han, Yiwen and Shen, Shihao and Wang, Xiaofei and Wang, Shiqiang and Leung, Victor CM},
  booktitle={IEEE INFOCOM 2021-IEEE conference on computer communications},
  pages={1--10},
  year={2021},
  organization={IEEE}
}
@book{barroso2019datacenter,
  title={The datacenter as a computer: Designing warehouse-scale machines},
  author={Barroso, Luiz Andr{\'e} and H{\"o}lzle, Urs and Ranganathan, Parthasarathy},
  year={2019},
  publisher={Springer Nature}
}
@inproceedings{verma2015large,
  title={Large-scale cluster management at Google with Borg},
  author={Verma, Abhishek and Pedrosa, Luis and Korupolu, Madhukar and Oppenheimer, David and Tune, Eric and Wilkes, John},
  booktitle={Proceedings of the tenth european conference on computer systems},
  pages={1--17},
  year={2015}
}
@inproceedings{ungureanu2019kubernetes,
  title={Kubernetes cluster optimization using hybrid shared-state scheduling framework},
  author={Ungureanu, Oana-Mihaela and Vl{\u{a}}deanu, C{\u{a}}lin and Kooij, Robert},
  booktitle={Proceedings of the 3rd International Conference on Future Networks and Distributed Systems},
  pages={1--12},
  year={2019}
}
@inproceedings{curino2019hydra,
  title={Hydra: a federated resource manager for data-center scale analytics},
  author={Curino, Carlo and Krishnan, Subru and Karanasos, Konstantinos and Rao, Sriram and Fumarola, Giovanni M and Huang, Botong and Chaliparambil, Kishore and Suresh, Arun and Chen, Young and Heddaya, Solom and others},
  booktitle={16th USENIX Symposium on Networked Systems Design and Implementation (NSDI 19)},
  pages={177--192},
  year={2019}
}
@inproceedings{tirmazi2020borg,
  title={Borg: the next generation},
  author={Tirmazi, Muhammad and Barker, Adam and Deng, Nan and Haque, Md E and Qin, Zhijing Gene and Hand, Steven and Harchol-Balter, Mor and Wilkes, John},
  booktitle={Proceedings of the fifteenth European conference on computer systems},
  pages={1--14},
  year={2020}
}
@inproceedings{delimitrou2015tarcil,
  title={Tarcil: Reconciling scheduling speed and quality in large shared clusters},
  author={Delimitrou, Christina and Sanchez, Daniel and Kozyrakis, Christos},
  booktitle={Proceedings of the Sixth ACM Symposium on Cloud Computing},
  pages={97--110},
  year={2015}
}
@inproceedings{ousterhout2013sparrow,
  title={Sparrow: distributed, low latency scheduling},
  author={Ousterhout, Kay and Wendell, Patrick and Zaharia, Matei and Stoica, Ion},
  booktitle={Proceedings of the twenty-fourth ACM symposium on operating systems principles},
  pages={69--84},
  year={2013}
}
@inproceedings{boutin2014apollo,
  title={Apollo: Scalable and coordinated scheduling for $\{$Cloud-Scale$\}$ computing},
  author={Boutin, Eric and Ekanayake, Jaliya and Lin, Wei and Shi, Bing and Zhou, Jingren and Qian, Zhengping and Wu, Ming and Zhou, Lidong},
  booktitle={11th USENIX symposium on operating systems design and implementation (OSDI 14)},
  pages={285--300},
  year={2014}
}
@inproceedings{hindman2011mesos,
  title={Mesos: A platform for $\{$Fine-Grained$\}$ resource sharing in the data center},
  author={Hindman, Benjamin and Konwinski, Andy and Zaharia, Matei and Ghodsi, Ali and Joseph, Anthony D and Katz, Randy and Shenker, Scott and Stoica, Ion},
  booktitle={8th USENIX Symposium on Networked Systems Design and Implementation (NSDI 11)},
  year={2011}
}
@inproceedings{schwarzkopf2013omega,
  title={Omega: flexible, scalable schedulers for large compute clusters},
  author={Schwarzkopf, Malte and Konwinski, Andy and Abd-El-Malek, Michael and Wilkes, John},
  booktitle={Proceedings of the 8th ACM European Conference on Computer Systems},
  pages={351--364},
  year={2013}
}
@inproceedings{khelghatdoust2018peacock,
  title={Peacock: Probe-based scheduling of jobs by rotating between elastic queues},
  author={Khelghatdoust, Mansour and Gramoli, Vincent},
  booktitle={European Conference on Parallel Processing},
  pages={178--191},
  year={2018},
  organization={Springer}
}
@inproceedings{delgado2016job,
  title={Job-aware scheduling in eagle: Divide and stick to your probes},
  author={Delgado, Pamela and Didona, Diego and Dinu, Florin and Zwaenepoel, Willy},
  booktitle={Proceedings of the Seventh ACM Symposium on Cloud Computing},
  pages={497--509},
  year={2016}
}
@inproceedings{zhou2019improving,
  title={Improving short job latency performance in hybrid job schedulers with dice},
  author={Zhou, Wei and White, K Preston and Yu, Hongfeng},
  booktitle={Proceedings of the 48th International Conference on Parallel Processing},
  pages={1--10},
  year={2019}
}
@inproceedings{karanasos2015mercury,
  title={Mercury: Hybrid centralized and distributed scheduling in large shared clusters},
  author={Karanasos, Konstantinos and Rao, Sriram and Curino, Carlo and Douglas, Chris and Chaliparambil, Kishore and Fumarola, Giovanni Matteo and Heddaya, Solom and Ramakrishnan, Raghu and Sakalanaga, Sarvesh},
  booktitle={2015 USENIX Annual Technical Conference (USENIX ATC 15)},
  pages={485--497},
  year={2015}
}
@inproceedings{delgado2015hawk,
  title={Hawk: Hybrid datacenter scheduling},
  author={Delgado, Pamela and Dinu, Florin and Kermarrec, Anne-Marie and Zwaenepoel, Willy},
  booktitle={2015 USENIX Annual Technical Conference (USENIX ATC 15)},
  pages={499--510},
  year={2015}
}
@inproceedings{wang2019pigeon,
  title={Pigeon: An effective distributed, hierarchical datacenter job scheduler},
  author={Wang, Zhijun and Li, Huiyang and Li, Zhongwei and Sun, Xiaocui and Rao, Jia and Che, Hao and Jiang, Hong},
  booktitle={Proceedings of the ACM symposium on cloud computing},
  pages={246--258},
  year={2019}
}
@inproceedings{isard2009quincy,
  title={Quincy: fair scheduling for distributed computing clusters},
  author={Isard, Michael and Prabhakaran, Vijayan and Currey, Jon and Wieder, Udi and Talwar, Kunal and Goldberg, Andrew},
  booktitle={Proceedings of the ACM SIGOPS 22nd symposium on Operating systems principles},
  pages={261--276},
  year={2009}
}
@inproceedings{ferguson2012jockey,
  title={Jockey: guaranteed job latency in data parallel clusters},
  author={Ferguson, Andrew D and Bodik, Peter and Kandula, Srikanth and Boutin, Eric and Fonseca, Rodrigo},
  booktitle={Proceedings of the 7th ACM european conference on Computer Systems},
  pages={99--112},
  year={2012}
}
@article{delimitrou2014quasar,
  title={Quasar: Resource-efficient and qos-aware cluster management},
  author={Delimitrou, Christina and Kozyrakis, Christos},
  journal={ACM Sigplan Notices},
  volume={49},
  number={4},
  pages={127--144},
  year={2014},
  publisher={ACM New York, NY, USA}
}
@phdthesis{gog2018flexible,
  title={Flexible and efficient computation in large data centres},
  author={Gog, Ionel Corneliu},
  year={2018}
}
@inproceedings{mogul2015inferring,
  title={Inferring the network latency requirements of cloud tenants},
  author={Mogul, Jeffrey C and Kompella, Ramana Rao},
  booktitle={15th Workshop on Hot Topics in Operating Systems (HotOS XV)},
  year={2015}
}
@inproceedings{grandl2016altruistic,
  title={Altruistic scheduling in $\{$Multi-Resource$\}$ clusters},
  author={Grandl, Robert and Chowdhury, Mosharaf and Akella, Aditya and Ananthanarayanan, Ganesh},
  booktitle={12th USENIX symposium on operating systems design and implementation (OSDI 16)},
  pages={65--80},
  year={2016}
}
@inproceedings{venkataraman2016ernest,
  title={Ernest: Efficient performance prediction for $\{$Large-Scale$\}$ advanced analytics},
  author={Venkataraman, Shivaram and Yang, Zongheng and Franklin, Michael and Recht, Benjamin and Stoica, Ion},
  booktitle={13th USENIX symposium on networked systems design and implementation (NSDI 16)},
  pages={363--378},
  year={2016}
}
@inproceedings{peng2018optimus,
  title={Optimus: an efficient dynamic resource scheduler for deep learning clusters},
  author={Peng, Yanghua and Bao, Yixin and Chen, Yangrui and Wu, Chuan and Guo, Chuanxiong},
  booktitle={Proceedings of the Thirteenth EuroSys Conference},
  pages={1--14},
  year={2018}
}
@misc{kube-constraints,
	title = {Assigning {Pods} to {Nodes}},
	url = {https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/},
	abstract = {You can constrain a Pod so that it is restricted to run on particular node(s), or to prefer to run on particular nodes. There are several ways to do this and the recommended approaches all use label selectors to facilitate the selection. Often, you do not need to set any such constraints; the scheduler will automatically do a reasonable placement (for example, spreading your Pods across nodes so as not place Pods on a node with insufficient free resources).},
	language = {en},
	urldate = {2025-06-06},
	journal = {Kubernetes},
	note = {Section: docs},
	file = {Snapshot:/Users/luca/Zotero/storage/YWVRHXFC/assign-pod-node.html:text/html},
}
@incollection{mao2019learning,
  title={Learning scheduling algorithms for data processing clusters},
  author={Mao, Hongzi and Schwarzkopf, Malte and Venkatakrishnan, Shaileshh Bojja and Meng, Zili and Alizadeh, Mohammad},
  booktitle={Proceedings of the ACM special interest group on data communication},
  pages={270--288},
  year={2019}
}
@inproceedings{cortez2017resource,
  title={Resource central: Understanding and predicting workloads for improved resource management in large cloud platforms},
  author={Cortez, Eli and Bonde, Anand and Muzio, Alexandre and Russinovich, Mark and Fontoura, Marcus and Bianchini, Ricardo},
  booktitle={Proceedings of the 26th Symposium on Operating Systems Principles},
  pages={153--167},
  year={2017}
}

@misc{kube_deployments,
	title = {Deployments},
	url = {https://kubernetes.io/docs/concepts/workloads/controllers/deployment/},
	abstract = {A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.},
	language = {en},
	urldate = {2025-06-06},
	journal = {Kubernetes},
	note = {Section: docs},
	file = {Snapshot:/Users/luca/Zotero/storage/LRAKSDRI/deployment.html:text/html},
}

@misc{kube_daemonset,
	title = {{DaemonSet}},
	url = {https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/},
	abstract = {A DaemonSet defines Pods that provide node-local facilities. These might be fundamental to the operation of your cluster, such as a networking helper tool, or be part of an add-on.},
	language = {en},
	urldate = {2025-06-06},
	journal = {Kubernetes},
	note = {Section: docs},
	file = {Snapshot:/Users/luca/Zotero/storage/YIW3YD5U/daemonset.html:text/html},
}
@misc{kube_jobs,
	title = {Jobs},
	url = {https://kubernetes.io/docs/concepts/workloads/controllers/job/},
	abstract = {Jobs represent one-off tasks that run to completion and then stop.},
	language = {en},
	urldate = {2025-06-06},
	journal = {Kubernetes},
	note = {Section: docs},
	file = {Snapshot:/Users/luca/Zotero/storage/SFH8QQHV/job.html:text/html},
}
@article{pearson1901liii,
  title={LIII. On lines and planes of closest fit to systems of points in space},
  author={Pearson, Karl},
  journal={The London, Edinburgh, and Dublin philosophical magazine and journal of science},
  volume={2},
  number={11},
  pages={559--572},
  year={1901},
  publisher={Taylor \& Francis}
}
@article{schwarzkopf2016evolution,
  title={The evolution of cluster scheduler architectures},
  author={Schwarzkopf, Malte},
  journal={Retrieved March},
  volume={13},
  pages={2019},
  year={2016}
}
@article{grammenos2020federated,
  title={Federated principal component analysis},
  author={Grammenos, Andreas and Mendoza Smith, Rodrigo and Crowcroft, Jon and Mascolo, Cecilia},
  journal={Advances in neural information processing systems},
  volume={33},
  pages={6453--6464},
  year={2020}
}
@inproceedings{casquero2019distributed,
  title={Distributed scheduling in Kubernetes based on MAS for Fog-in-the-loop applications},
  author={Casquero, Oskar and Armentia, Aintzane and Sarachaga, Isabel and P{\'e}rez, Federico and Orive, Dar{\'\i}o and Marcos, Marga},
  booktitle={2019 24th IEEE international conference on emerging technologies and factory automation (ETFA)},
  pages={1213--1217},
  year={2019},
  organization={IEEE}
}
@inproceedings{luong2019multi,
  title={Multi-level Resource Scheduling for network slicing toward 5G},
  author={Luong, Duc-Hung and Outtagarts, Abdelkader and Ghamri-Doudane, Yacine},
  booktitle={2019 10th International Conference on Networks of the Future (NoF)},
  pages={25--31},
  year={2019},
  organization={IEEE}
}
@inproceedings{zhang2019multi,
  title={Multi-resource fair allocation for cloud federation},
  author={Zhang, Gengwei and Lu, Runhao and Wu, Weigang},
  booktitle={2019 IEEE 21st International Conference on High Performance Computing and Communications; IEEE 17th International Conference on Smart City; IEEE 5th International Conference on Data Science and Systems (HPCC/SmartCity/DSS)},
  pages={2189--2194},
  year={2019},
  organization={IEEE}
}
@article{welch1995introduction,
  title={An introduction to the Kalman filter},
  author={Welch, Greg and Bishop, Gary and others},
  year={1995},
  publisher={Chapel Hill, NC, USA}
}
@article{tanenbaum2002distributed,
  title={Distributed systems: Principles and paradigms, prenctice hall},
  author={Tanenbaum, Andrew S and Van Steen, M},
  journal={Computer Science},
  volume={200},
  number={2},
  year={2002}
}
@inproceedings{vijayakumar2024scheduling,
  title={Scheduling for Reduced Tail Task Latencies in Highly Utilized Datacenters},
  author={Vijayakumar, Smita and Madhavapeddy, Anil and Kalyvianaki, Evangelia},
  booktitle={Proceedings of the 2024 ACM Symposium on Cloud Computing},
  pages={302--321},
  year={2024}
}
@book{turnbull2018monitoring,
  title={Monitoring with Prometheus},
  author={Turnbull, James},
  year={2018},
  publisher={Turnbull Press}
}
